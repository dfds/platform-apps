apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: atlantis
  namespace: atlantis
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: atlantis-ssm
  target:
    name: atlantis-environment
    creationPolicy: Owner
  dataFrom:
    - find:
        path: /atlantis
        name:
          regexp: .*
      rewrite:
        - regexp:
            source: "/atlantis/(.*)"
            target: "${1}"
    - find:
        path: /falco
        name:
          regexp: .*
      rewrite:
      - regexp:
          source: "/falco/(.*)"
          target: "${1}"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: 1password-connect-token
  namespace: atlantis
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: atlantis-ssm
  target:
    name: atlantis-1password-token
    creationPolicy: Owner
  data:
    - secretKey: token
      remoteRef:
        key: /atlantis/1password-connect-token
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: atlantis-1password
  namespace: atlantis
spec:
  secretStoreRef:
    kind: SecretStore
    name: atlantis-1password
  target:
    name: atlantis-environment-1password
    creationPolicy: Owner
  data:
  - secretKey: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_KEY
    remoteRef:
      key: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_KEY
      property: username
  - secretKey: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_SECRET
    remoteRef:
      key: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_KEY
      property: password
  - secretKey: PRODUCTION_AWS_ACCESS_KEY_ID
    remoteRef:
      key: AWS account dfds-core IAM user deploy-prime-core
      property: username
  - secretKey: PRODUCTION_AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: AWS account dfds-core IAM user deploy-prime-core
      property: password
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_HARDENED_MONITORING_SLACK_TOKEN
    remoteRef:
      key: Slack dfds.slack.com aws-account-manifests hardened monitoring slack token
      property: password
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_KAFKA_BROKER
    remoteRef:
      key: Confluent Kafka connection for aws-account-manifests
      property: broker
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_KAFKA_PASSWORD
    remoteRef:
      key: Confluent Kafka connection for aws-account-manifests
      property: password
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_KAFKA_USERNAME
    remoteRef:
      key: Confluent Kafka connection for aws-account-manifests
      property: username
  - secretKey: PRODUCTION_GRAFANA_1PASSWORD_API_KEY
    remoteRef:
      key: Grafana Cloud
      property: CloudEng-Grafana-Sharing-svc-token
  - secretKey: PRODUCTION_GRAFANA_AGENT_API_TOKEN
    remoteRef:
      key: Grafana.com - platform
      property: grafana_token
  - secretKey: PRODUCTION_GRAFANA_AGENT_LOKI_URL
    remoteRef:
      key: Grafana.com - platform
      property: Loki_URL
  - secretKey: PRODUCTION_GRAFANA_AGENT_LOKI_USERNAME
    remoteRef:
      key: Grafana.com - platform
      property: Loki_Username
  - secretKey: PRODUCTION_GRAFANA_AGENT_PROMETHEUS_URL
    remoteRef:
      key: Grafana.com - platform
      property: Prometheus_URL
  - secretKey: PRODUCTION_GRAFANA_AGENT_PROMETHEUS_USERNAME
    remoteRef:
      key: Grafana.com - platform
      property: Prometheus_Username
  - secretKey: PRODUCTION_GRAFANA_AGENT_TEMPO_URL
    remoteRef:
      key: Grafana.com - platform
      property: Tempo_URL
  - secretKey: PRODUCTION_GRAFANA_AGENT_TEMPO_USERNAME
    remoteRef:
      key: Grafana.com - platform
      property: Tempo_Username
  - secretKey: PRODUCTION_GRAFANA_CLOUD_API_KEY
    remoteRef:
      key: Grafana Cloud
      property: Access Policy used for managing the stacks (grafana-cloud-environments)
  - secretKey: PRODUCTION_GRAFANA_CLOUD_ARM_CLIENT_ID
    remoteRef:
      key: Grafana Cloud
      property: dqsvwsjln6d2fizbprnqep6dze #Client ID
  # - secretKey: PRODUCTION_GRAFANA_CLOUD_ARM_CLIENT_SECRET
  #   remoteRef:
  #     key: Grafana Cloud
  #     property: Client Secret
  - secretKey: PRODUCTION_PREPRIME_AWS_ACCESS_KEY_ID
    remoteRef:
      key: AWS account dfds-master IAM user preprime
      property: username
  - secretKey: PRODUCTION_PREPRIME_AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: AWS account dfds-master IAM user preprime
      property: password
  # - secretKey: PRODUCTION_PREPRIME_BACKUP_REPORTS_SLACK_WEBHOOK_URL
  #   remoteRef:
  #     key: Slack dfds.slack.com webhooks
  #     property: ym64qmwfnbo57hszyrf3wrl5ei
  - secretKey: PRODUCTION_PRIME_AWS_ACCESS_KEY_ID
    remoteRef:
      key: AWS account dfds-master IAM user prime
      property: username
  - secretKey: PRODUCTION_PRIME_AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: AWS account dfds-master IAM user prime
      property: password
  - secretKey: PRODUCTION_TF_VAR_monitoring_kube_prometheus_stack_slack_webhook
    remoteRef:
      key: Slack dfds.slack.com webhooks
      property: gombezpq3of3bh7q46zv5kqo54
  - secretKey: PRODUCTION_TF_VAR_slack_webhook_url
    remoteRef:
      key: Slack dfds.slack.com webhooks
      property: gombezpq3of3bh7q46zv5kqo54
  - secretKey: SHARED_ARM_CLIENT_ID
    remoteRef:
      key: Terraform Azure App Service Principal
      property: username
  - secretKey: SHARED_ARM_CLIENT_SECRET
    remoteRef:
      key: Terraform Azure App Service Principal
      property: password
  - secretKey: SHARED_ARM_SUBSCRIPTION_ID
    remoteRef:
      key: Terraform Azure App Service Principal
      property: subscription_id
  - secretKey: SHARED_ARM_TENANT_ID
    remoteRef:
      key: Terraform Azure App Service Principal
      property: tenant_id
  - secretKey: SHARED_TF_VAR_atlantis_github_token
    remoteRef:
      key: Github account devex-sa
      property: atlantis-prod
  - secretKey: SHARED_TF_VAR_fluxcd_bootstrap_repo_owner_token
    remoteRef:
      key: Github account devex-sa
      property: flux-prod
  - secretKey: SHARED_TF_VAR_monitoring_kube_prometheus_stack_azure_tenant_id
    remoteRef:
      key: Terraform Azure App Service Principal
      property: tenant_id
  - secretKey: STAGING_AWS_ACCESS_KEY_ID
    remoteRef:
      key: AWS account dfds-core IAM user deploy-prime-core
      property: username
  - secretKey: STAGING_AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: AWS account dfds-core IAM user deploy-prime-core
      property: password
  - secretKey: STAGING_GRAFANA_AGENT_LOKI_URL
    remoteRef:
      key: Grafana.com - sandbox
      property: Loki_URL
  - secretKey: STAGING_GRAFANA_AGENT_LOKI_USERNAME
    remoteRef:
      key: Grafana.com - sandbox
      property: Loki_Username
  - secretKey: STAGING_GRAFANA_AGENT_PROMETHEUS_URL
    remoteRef:
      key: Grafana.com - sandbox
      property: Prometheus_URL
  - secretKey: STAGING_GRAFANA_AGENT_PROMETHEUS_USERNAME
    remoteRef:
      key: Grafana.com - sandbox
      property: Prometheus_Username
  - secretKey: STAGING_GRAFANA_AGENT_TEMPO_URL
    remoteRef:
      key: Grafana.com - sandbox
      property: Tempo_URL
  - secretKey: STAGING_GRAFANA_AGENT_TEMPO_USERNAME
    remoteRef:
      key: Grafana.com - sandbox
      property: Tempo_Username
  # - secretKey: STAGING_TF_VAR_monitoring_kube_prometheus_stack_slack_webhook
  #   remoteRef:
  #     key: Slack dfds.slack.com webhooks
  #     property: a2zntulaslo46f2gz5n2hxqjpq
  # - secretKey: STAGING_TF_VAR_slack_webhook_url
  #   remoteRef:
  #     key: Slack dfds.slack.com webhooks
  #     property: a2zntulaslo46f2gz5n2hxqjpq
  refreshInterval: "1m"
---