apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: atlantis
  namespace: atlantis
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: atlantis-ssm
  target:
    name: atlantis-environment
    creationPolicy: Owner
  dataFrom:
    - find:
        path: /atlantis
        name:
          regexp: .*
      rewrite:
        - regexp:
            source: "/atlantis/(.*)"
            target: "${1}"
    - find:
        path: /falco
        name:
          regexp: .*
      rewrite:
      - regexp:
          source: "/falco/(.*)"
          target: "${1}"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: 1password-connect-token
  namespace: atlantis
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: atlantis-ssm
  target:
    name: atlantis-1password-token
    creationPolicy: Owner
  data:
    - secretKey: token
      remoteRef:
        key: /atlantis/1password-connect-token
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: atlantis-environment-1password
  namespace: atlantis
spec:
  secretStoreRef:
    kind: SecretStore
    name: atlantis-1password
  target:
    creationPolicy: Owner
  data:
  - secretKey: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_KEY
    remoteRef:
      key: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_KEY
      property: username
  - secretKey: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_SECRET
    remoteRef:
      key: CONFLUENT_KAFKA_PROD_PROMETHEUS_METRICS_EXPORTER_HELLMAN_API_SECRET
      property: password
  - secretKey: PRODUCTION_AWS_ACCESS_KEY_ID
    remoteRef:
      key: AWS account dfds-core IAM user deploy-prime-core
      property: username
  - secretKey: PRODUCTION_AWS_SECRET_ACCESS_KEY
    remoteRef:
      key: AWS account dfds-core IAM user deploy-prime-core
      property: password
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_HARDENED_MONITORING_SLACK_TOKEN
    remoteRef:
      key: AWS account manifests hardened monitoring slack token
      property: password
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_KAFKA_BROKER
    remoteRef:
      key: Confluent Kafka connection for aws-account-manifests
      property: broker
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_KAFKA_PASSWORD
    remoteRef:
      key: Confluent Kafka connection for aws-account-manifests
      property: password
  - secretKey: PRODUCTION_AWS_ACCOUNT_MANIFESTS_KAFKA_USERNAME
    remoteRef:
      key: Confluent Kafka connection for aws-account-manifests
      property: username
  - secretKey: PRODUCTION_GRAFANA_1PASSWORD_API_KEY
    remoteRef:
      key: Grafana Cloud
      property: CloudEng-Grafana-Sharing-svc-token
  # # - secretKey: MY_ENV_VAR2
  #   remoteRef:
  #     key: Confluent Kafka connection for aws-account-manifests
  #     property: MY_ENV_VAR2
  refreshInterval: "1m"
---