apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana-k8s-monitoring
  namespace: flux-system
spec:
  serviceAccountName: helm-controller
  releaseName: grafana-k8s-monitoring
  chart:
    spec:
      chart: k8s-monitoring
      version: 1.6.46
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  interval: 1m0s
  install:
    remediation:
      retries: 3
  values:
    logs:
      enabled: true
      pod_logs:
        enabled: true
      cluster_events:
        enabled: true
      journal:
        enabled: true
        units: []
      extraConfig: |
        local.file_match "worker_nodes_logs" {
          path_targets = [{
            __address__ = "localhost",
            __path__    = "/var/log/**",
             __path_exclude__ = "/var/log/{pods,containers,journal}/**",
            instance = env("HOSTNAME"),
            job         = "integrations/kubernetes/worker-node",
          }]
        }

        loki.source.file "worker_nodes_logs" {
          targets    = local.file_match.worker_nodes_logs.targets
          forward_to = [loki.process.worker_nodes_logs.receiver]
        }

        loki.process "worker_nodes_logs" {
          forward_to = [
            loki.process.logs_service.receiver,
          ]
        }
    alloy:
      controller:
        priorityClassName: cluster-observability
    alloy-events:
      controller:
        priorityClassName: cluster-observability
    alloy-logs:
      controller:
        priorityClassName: node-observability
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
    metrics:
      enabled: true
      autoDiscover:
        enabled: false
      cost:
        enabled: ${open_cost_enabled}
      node-exporter:
        enabled: true
        metricsTuning:
          useDefaultAllowList: false
      serviceMonitors:
        enabled: true
        selector:
          |- # Generic ServiceMonitor selector to include everything except old Prometheus releases labels
          match_expression {
            key = "release"
            operator = "NotIn"
            values = ["monitoring"]
          }
      kube-state-metrics:
        metricsTuning:
          useDefaultAllowList: false
      cadvisor:
        metricsTuning:
          useDefaultAllowList: false
      apiserver:
        enabled: true
      kubelet:
        enabled: true
        metricsTuning:
          useDefaultAllowList: true
          includeMetrics:
            - storage_operation_duration_seconds_bucket
            - rest_client_request_duration_seconds_bucket
            - process_resident_memory_bytes
            - process_cpu_seconds_total
            - go_goroutines
            - kubelet_runtime_operations_duration_seconds_bucket
      kube-controller-manager:
    kube-state-metrics:
      enabled: true
      customLabels:
        jobLabel: kube-state-metrics
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      priorityClassName: cluster-observability
      rbac:
        create: true
        extraRules:
          - apiGroups: ["traefik.containo.us", "traefik.io"]
            resources: ["ingressroutes", "middlewares", "tlsoptions"]
            verbs: ["list", "watch"]
      customResourceState:
        enabled: true
        config:
          spec:
            resources:
              - groupVersionKind:
                  group: traefik.io
                  version: v1alpha1
                  kind: IngressRoute
                metrics:
                  - name: "traefik"
                    help: 'Monitor Traefik ingressroute resources that make use of "traefik.io" API group.'
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                          namespace: [metadata, namespace]
              - groupVersionKind:
                  group: traefik.io
                  version: v1alpha1
                  kind: Middleware
                metrics:
                  - name: "traefik"
                    help: 'Monitor Traefik middleware resources that make use of "traefik.io" API group.'
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                          namespace: [metadata, namespace]
              - groupVersionKind:
                  group: traefik.io
                  version: v1alpha1
                  kind: TLSOption
                metrics:
                  - name: "traefik"
                    help: 'Monitor Traefik TLSOption resources that make use of "traefik.io" old API group.'
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                          namespace: [metadata, namespace]
              - groupVersionKind:
                  group: traefik.containo.us
                  version: v1alpha1
                  kind: IngressRoute
                metrics:
                  - name: "traefik"
                    help: 'Monitor Traefik ingressroute resources that make use of "traefik.containo.us" API group.'
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                          namespace: [metadata, namespace]
              - groupVersionKind:
                  group: traefik.containo.us
                  version: v1alpha1
                  kind: Middleware
                metrics:
                  - name: "traefik"
                    help: 'Monitor Traefik middleware resources that make use of "traefik.containo.us" old API group.'
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                          namespace: [metadata, namespace]
              - groupVersionKind:
                  group: traefik.containo.us
                  version: v1alpha1
                  kind: TLSOption
                metrics:
                  - name: "traefik"
                    help: 'Monitor Traefik TLSOption resources that make use of "traefik.containo.us" old API group.'
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                          namespace: [metadata, namespace]
    prometheus-node-exporter:
      enabled: true
      podLabels:
        jobLabel: node-exporter # Used for to set the label on the service for the ServiceMonitor
      resources:
        requests:
          cpu: 20m
          memory: 50Mi
      priorityClassName: node-observability
      updateStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%

    prometheus-operator-crds:
      enabled: true
    extraObjects:
      - apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          labels:
            app: prometheus-service-metrics-scraper
          name: prometheus-service-metrics-scraper
        spec:
          endpoints:
            - path: /metrics
              port: metrics
              scrapeTimeout: 30s
            - path: /metrics
              port: admin
            - path: /metrics
              port: http
          namespaceSelector:
            any: true
          selector:
            matchLabels:
              scrape-service-metrics: "true"
