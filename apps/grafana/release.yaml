apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana-k8s-monitoring
  namespace: flux-system
spec:
  releaseName: grafana-k8s-monitoring
  chart:
    spec:
      chart: k8s-monitoring
      version: 1.6.12
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  interval: 1m0s
  install:
    remediation:
      retries: 3
  values:
    logs:
      enabled: true
      pod_logs:
        enabled: true
      cluster_events:
        enabled: true
      journal:
        enabled: true
        units: []
      extraConfig: |
        local.file_match "worker_nodes_logs" {
          path_targets = [{
            __address__ = "localhost",
            __path__    = "/var/log/**",
             __path_exclude__ = "/var/log/{pods,containers,journal}/**",
            instance = env("HOSTNAME"),
            job         = "integrations/kubernetes/worker-node",
          }]
        }

        loki.source.file "worker_nodes_logs" {
          targets    = local.file_match.worker_nodes_logs.targets
          forward_to = [loki.process.worker_nodes_logs.receiver]
        }

        loki.process "worker_nodes_logs" {
          forward_to = [
            loki.process.logs_service.receiver,
          ]
        }
    alloy-events: {}
    alloy-logs: {}
    metrics:
      enabled: true
      autoDiscover:
        enabled: false
      cost:
        enabled: ${open_cost_enabled}
      node-exporter:
        enabled: true
        metricsTuning:
          useDefaultAllowList: false
      serviceMonitors:
        enabled: true
        selector:
          |- # TODO: Delete this block when shutting down the old Prometheus
          match_expression {
            key = "release"
            operator = "NotIn"
            values = ["monitoring"]
          }
      kube-state-metrics:
        metricsTuning:
          useDefaultAllowList: false
      cadvisor:
        metricsTuning:
          useDefaultAllowList: false
      apiserver:
        enabled: true
    kube-state-metrics:
      enabled: true
      customLabels:
        jobLabel: kube-state-metrics
      resources:
        requests:
          cpu: 20m
          memory: 100Mi
      prometheus:
        monitor: # ServiceMonitor - TODO: Delete this block when shutting down the old Prometheus
          enabled: false
          # jobLabel: jobLabel
          # additionalLabels: {
          #   release: monitoring
          # }
    prometheus-node-exporter:
      enabled: true
      podLabels:
        jobLabel: node-exporter # Used for to set the label on the service for the ServiceMonitor
      resources:
        requests:
          cpu: 20m
          memory: 50Mi
      prometheus: #
        monitor: # TODO: Delete this block when shutting down the old Prometheus
          enabled: true
          jobLabel: jobLabel # Used for Prometheus to name the job. If jobLabel has not been set on the Service then default value will come from app.kubernetes.io/name
          additionalLabels: { release: monitoring }

    prometheus-operator-crds:
      # Set this to true when removing the old Prometheus stack
      enabled: false
    extraObjects:
      - apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          labels:
            app: prometheus-service-metrics-scraper
          name: prometheus-service-metrics-scraper
        spec:
          endpoints:
            - path: /metrics
              port: metrics
              scrapeTimeout: 30s
            - path: /metrics
              port: admin
            - path: /metrics
              port: http
          namespaceSelector:
            any: true
          selector:
            matchLabels:
              scrape-service-metrics: "true"

      # Delete below service monitors when shutting down the old Prometheus
      - apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          name: kube-prometheus-stack-coredns
          labels:
            app: kube-prometheus-stack-coredns
            app.kubernetes.io/instance: kube-prometheus-stack
            release: monitoring
        spec:
          jobLabel: jobLabel
          selector:
            matchLabels:
              app: kube-prometheus-stack-coredns
              release: monitoring
          namespaceSelector:
            matchNames:
              - kube-system
          endpoints:
            - port: http-metrics
              bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      - apiVersion: v1
        kind: Service
        metadata:
          name: kube-prometheus-stack-coredns
          labels:
            app: kube-prometheus-stack-coredns
            jobLabel: coredns
            app.kubernetes.io/instance: kube-prometheus-stack
            release: monitoring
          namespace: kube-system
        spec:
          clusterIP: None
          ports:
            - name: http-metrics
              port: 9153
              protocol: TCP
              targetPort: 9153
          selector:
            k8s-app: kube-dns
      ###################################
      - apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          labels:
            app: kube-prometheus-stack-kubelet
            release: monitoring
          name: monitoring-kube-prometheus-kubelet
        spec:
          attachMetadata:
            node: false
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              honorLabels: true
              honorTimestamps: true
              port: https-metrics
              relabelings:
                - action: replace
                  sourceLabels:
                    - __metrics_path__
                  targetLabel: metrics_path
              scheme: https
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecureSkipVerify: true
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              honorLabels: true
              honorTimestamps: true
              metricRelabelings:
                - action: labeldrop
                  regex: id
                - action: labeldrop
                  regex: name
              path: /metrics/cadvisor
              port: https-metrics
              relabelings:
                - action: replace
                  sourceLabels:
                    - __metrics_path__
                  targetLabel: metrics_path
              scheme: https
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecureSkipVerify: true
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              honorLabels: true
              honorTimestamps: true
              path: /metrics/probes
              port: https-metrics
              relabelings:
                - action: replace
                  sourceLabels:
                    - __metrics_path__
                  targetLabel: metrics_path
              scheme: https
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecureSkipVerify: true
          jobLabel: k8s-app
          namespaceSelector:
            matchNames:
              - kube-system
          selector:
            matchLabels:
              app.kubernetes.io/name: kubelet
              k8s-app: kubelet
      ##########################
      - apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          name: kube-prometheus-stack-apiserver
          labels:
            app: kube-prometheus-stack-apiserver
            app.kubernetes.io/instance: kube-prometheus-stack
            release: monitoring
        spec:
          endpoints:
            - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
              port: https
              scheme: https
              metricRelabelings:
                - action: drop
                  regex: apiserver_request_duration_seconds_bucket;(0.15|0.2|0.3|0.35|0.4|0.45|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2|3|3.5|4|4.5|6|7|8|9|15|25|40|50)
                  sourceLabels:
                    - __name__
                    - le
              tlsConfig:
                caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                serverName: kubernetes
                insecureSkipVerify: false
          jobLabel: component
          namespaceSelector:
            matchNames:
              - default
          selector:
            matchLabels:
              component: apiserver
              provider: kubernetes
        ####
